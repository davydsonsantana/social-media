version: "3.4"

services:
  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_RAFT_CLUSTER_ID=LOCALHOST
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://LOCALHOST:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  mongo:
    container_name: mongo-db
    image: mongo
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - "mongo_data:/data/db"

  sql-server-db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu          
    ports:
      - "1433:1433"
    volumes:
      - "sqlserver_data:/var/opt/mssql"      
    environment:
      SA_PASSWORD: "FA22lFI9gRpUzfe"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"

volumes:
  kafka_data:
    driver: local
  mongo_data:
    driver: local
  sqlserver_data:
    driver: local    
   
networks:
  social_media_network:
    external: true   
